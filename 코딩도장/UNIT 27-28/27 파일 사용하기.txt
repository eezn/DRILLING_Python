27. 파일 사용하기


27.1.1 파일에 문자열 쓰기

- 파일객체 = open(파일이름, 파일모드)
- 파일객체.write('문자열')
- 파일객체.close()

file = open('hello.txt', 'w')
file.write('Hello, world!')
file.close()


27.1.2 파일에서 문자열 읽기

- 변수 = 파일객체.read()

file = open('hello.txt', 'r')
s = file.read()
print(s)
file.close()


27.1.3 자동으로 파일 객체 닫기

with open(파일이름, 파일모드) as 파일객체:
    코드

with open('hello.txt', 'r') as file:
    s = file.read()
    print(s)




27.2 문자열 여러 줄을 파일에 쓰기, 읽기

27.2.1 반복문으로 문자열 여러 줄을 파일에 쓰기

with open('hello.txt', 'w') as file:
    for i in range(3):
        file.write('Hello, world! {0}\n'.format(i))


27.2.2 리스트에 들어있는 문자열을 파일에 쓰기

- 파일객체.writelines(문자열리스트)

lines = ['안녕하세요.\n', '파이썬\n', '코딩 도장입니다.\n']

with open('hello.txt', 'w') as file:
    file.writelines(lines)


27.2.3 파일의 내용을 한 줄씩 리스트로 가져오기

- 변수 = 파일객체.readlines()

with open('hello.txt', 'r') as file:
    lines = file.readlines()
    print(lines)


27.2.4 파일의 내용을 한 줄씩 읽기

- 변수 = 파일객체.readline()

with open('hello.txt', 'r') as file:
    line = None # 변수 line을 None으로 초기화
    while line != '':
        line = file.readline()
        print(line.strip('\n')) # 파일에서 읽어온 문자열에서 \n 삭제하여 출력


27.2.5 for 반복문으로 파일의 내용을 줄 단위로 읽기

with open('hello.txt', 'r') as file:
    for line in file:
        
        print(line.strip('\n'))




27.3 파이썬 객체를 파일에 저장하기, 가져오기 # pickle module

27.3.1 파이썬 객체를 파일에 저장하기 # 피클링

import pickle

name = 'james'
age = 17
address = '서울시 서초구 반포동'
scores = {'korean': 90, 'english': 95, 'mathematics': 85, 'science': 82}

with open('james.p', 'wb') as file: # james.b 파일을 바이너리 쓰기 모드(wb)로 열기
    pickle.dump(name, file)
    pickle.dump(age, file)
    pickle.dump(address, file)
    pickle.dump(scores, file)


27.3.2 파일에서 파이썬 객체 읽기 # 언피클링

import pickle

with open('james.p', 'rb') as file: # james.p 파일을 바이너리 읽기 모드(rb)로 열기
    name = pickle.load(file)
    age = pickle.load(file)
    address = pickle.load(file)
    scores = pickle.load(file)
    print(name)
    print(age)
    print(address)
    print(scores)
